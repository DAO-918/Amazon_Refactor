'''div_level_3 = div.find_element(By.XPATH,"./div/div/div")
div_level_4_Main = div.find_element(By.XPATH,"./div[1]")
div_level_4_Seller = div.find_element(By.XPATH,"./div[2]")
div_level_5 = div.find_elements(By.XPATH,"./div")
div_level_5_len = len(div_level_5_len)
if div_level_5_len == 3:
    div_level_5_AB = div.find_element(By.XPATH,"./div[1]")
    div_level_5_Image = div.find_element(By.XPATH,"./div[2]")
    div_level_5_Info = div.find_element(By.XPATH,"./div[3]")
if div_level_5_len == 2:
    div_level_5_Image = div.find_element(By.XPATH,"./div[1]")
    div_level_5_Info = div.find_element(By.XPATH,"./div[2]")
if div_level_5_AB is not None:
'''
    
'''div_level_6_Span = div.find_element(By.XPATH,"./span")
AB_tpye = div_level_6_Span.get_attribute("aria-label")
if AB_tpye == "Amazon's Choice":
    AB_Keyword = div.find_element(By.XPATH,"./a/span/div/span/span/span")'''


def get_div_features(self, div_parent, features_list:list, level=0):
    tag_name = div_parent.tag_name
    attributes = div_parent.get_attribute("class")
    feature = [tag_name, level, attributes, []]
    for child in div_parent.find_elements(By.XPATH, './*'):
        tag_name = child.tag_name
        attributes = child.get_attribute("class")
        feature = [tag_name, level, attributes, []]
        for child2 in child.find_elements(By.XPATH, './*'):
            xxx
            feature[3].append(child_feature)
        feature[3].append(child_feature)
    features_list.append


self.asin_id = None
self.asin = None
self.asin_url = None
self.image = None
self.title = None
self.amz_choice = None
self.best_seller = None
self.variant_count = None
self.is_deal = None # boolean value
self.fba = None
self.is_fba = None  # boolean value
self.is_amz = None  # boolean value
self.is_smb = None  # boolean value
self.lower_price = None
self.lower_list = None
self.lowest_precent = None
self.sale_price = None
self.rrp_price = None
self.rrp_type = None
self.prime_price = None
self.discount = None
self.coupon = None
self.saving = None
self.promotion = None
self.rating = None
self.review = None
self.bought = None
self.a_rank = None  # dict value
self.b_rank = None  # dict value

# 长期不会更改
self.brand = None
self.store_name = None
self.store_id = None
self.use_ages = None
self.bullet_points = None
self.base_info = None
self.weight = None  # list value 重量，单位
self.measure = None  # list value 长，宽，高，单位

# 实时变化
self.data_index = None
self.data_uuid = None
self.data_component_type = None
self.data_component_id = None
self.data_cel_widget = None
self.data_type = None

self.time = None

asin
country
time
asin_url
image
title
brand
merchant_token
amz_choice
best_seller
variant_count
is_deal
fba
is_fba
is_amz
is_smb
lower_price
lower_list
lowest_precent
sale_price
rrp_price
rrp_type
prime_price
discount
coupon
saving
promotion
rating
review
bought
a_rank
b_rank
keyword
page
data_index
data_rindex
data_uuid
data_component_type
data_component_id
data_cel_widget
data_type


[
'sg-col-4-of-24 sg-col-4-of-12 s-result-item s-asin sg-col-4-of-16 sg-col s-widget-spacing-small sg-col-4-of-20', 
'sg-col-4-of-24 sg-col-4-of-12 s-result-item s-asin sg-col-4-of-16 AdHolder sg-col s-widget-spacing-small sg-col-4-of-20', 
'a-section a-spacing-none s-result-item s-flex-full-width s-border-bottom-none s-widget s-widget-spacing-large', 
'sg-col-20-of-24 s-result-item sg-col-0-of-12 sg-col-16-of-20 s-widget sg-col s-flex-geom s-widget-spacing-small sg-col-12-of-16', 
'sg-col-20-of-24 s-result-item sg-col-0-of-12 sg-col-16-of-20 s-widget sg-col s-flex-geom sg-col-12-of-16 s-widget-spacing-large', 
's-result-item s-widget s-widget-spacing-large AdHolder s-flex-full-width', 
'a-section a-spacing-none s-result-item s-flex-full-width s-widget s-widget-spacing-large'
]